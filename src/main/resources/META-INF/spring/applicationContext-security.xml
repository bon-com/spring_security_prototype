<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/security
           https://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 静的リソース（CSS, JS, 画像など）へのセキュリティ除外 -->
	<sec:http pattern="/resources/**" security="none" />

	<!-- 認証クラス -->
	<bean id="userDetailsService" class="com.example.prototype.biz.users.service.AuthenticationUserService" />
	<!-- 認証時のパスワードエンコーダー -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- 認可エラー時のハンドリングクラス -->
	<bean id="accessDeniedHandler" class="com.example.prototype.biz.users.listener.ExtendedAccessDeniedHandler" />
	
	<!-- 認証と認可の設定をここに記載していく -->
	<sec:http>
		<!-- user配下は利用者、マネジャー、管理者、開発者ロールを許可 -->
		<sec:intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_DEVELOPER')" />
		<!-- admin配下は管理者、開発者ロールを許可 -->
		<sec:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN','ROLE_DEVELOPER')" />
		<!-- 自作したログイン画面のパス「/login」は認証不要とする（※isAuthenticated()の設定よりも先に定義すること） -->
		<sec:intercept-url pattern="/login" access="permitAll()" />
		<!-- すべてのパスで認証が必要 -->
		<sec:intercept-url pattern="/**" access="isAuthenticated()" />
		<!-- 
		未認証時のパス：<sec:form-login />だけを定義すると、Spring Security提供のデフォルトログイン画面に遷移
		default-target-url属性を指定すると、ログインのリダイレクト先URLを指定可能。（省略時は「/」）
		login-page属性にパスを指定することで、認証が必要なリソースにアクセスした際、未認証ならこのURLにリダイレクトされる
		authentication-failure-url属性は認証エラー時のリダイレクト先URL
		username-parameter属性はフォームのusername変数を指定できる
		password-parameter属性はフォームのpassword変数を指定できる
		-->
		<sec:form-login 
			default-target-url="/" 
			login-page="/login" 
			username-parameter="loginId"
			password-parameter="password"
			authentication-failure-url="/login?error"/>
  		<!-- ログアウト設定 -->
  		<!-- 
  		logout-success-url： ログアウト成功時のリダイレクト先URL
  		invalidate-session： TRUE⇒セッション破棄
  		 -->
		<sec:logout 
			logout-url="/logout" 
			logout-success-url="/login?logout=true" 
			invalidate-session="true" />
		<sec:access-denied-handler ref="accessDeniedHandler" />
	</sec:http>

	<!-- 認証プロバイダーの設定 -->
	<sec:authentication-manager>
		<!-- 認証処理は下記のBeanを呼び出すという設定（実際のBeanはコンポーネントスキャンにて登録されている） -->
		<sec:authentication-provider user-service-ref="userDetailsService">
			 <sec:password-encoder ref="passwordEncoder" />
		</sec:authentication-provider>
	</sec:authentication-manager>
</beans>
